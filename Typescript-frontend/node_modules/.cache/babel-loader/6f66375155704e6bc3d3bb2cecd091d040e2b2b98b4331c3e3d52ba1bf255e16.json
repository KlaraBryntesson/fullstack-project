{"ast":null,"code":"var _jsxFileName = \"/Users/klarabryntesson/Documents/Fullstack/React/Typescript-Klara-portfolio/src/ContactForm.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\n// import { Formik } from \"formik\";\nimport { useState, useContext } from 'react';\nimport PrimaryButton from './PrimaryButton';\nimport styled from 'styled-components';\nimport { SomeContext } from './SomeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ContactForm() {\n  _s();\n  var _useContext;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [showError, setShowError] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const {\n    theme\n  } = (_useContext = useContext(SomeContext)) !== null && _useContext !== void 0 ? _useContext : {};\n  function handleSubmit() {\n    if (name === '' || email === '' || phone === '') {\n      setShowError(true);\n      setTimeout(() => {\n        setShowError(false);\n      }, 3000);\n    } else {\n      setShowSuccess(true);\n      setTimeout(() => {\n        setShowSuccess(false);\n      }, 3000);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormDiv, {\n      ThemeColor: theme === 'light' ? 'rgb(42, 42, 42)' : 'antiquewhite',\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => setName(event.target.value),\n          value: name,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          onChange: event => setEmail(event.target.value),\n          value: email,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Phone\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          onChange: event => setPhone(event.target.value),\n          value: phone,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n        type: \"submit\",\n        children: \"Send Inquiry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), showError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Contact-message\",\n        children: \"All fields must be filled in!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), showSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Contact-message\",\n        children: \"Thank you for your inquiry!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(ContactForm, \"gir8UAK8k6oILX3bjWHyptpCGFY=\");\n_c = ContactForm;\nconst FormDiv = styled.form`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  padding: 25px;\n\n  label {\n    display: flex;\n    flex-direction: column;\n    width: 70%;\n    min-width: 300px;\n    max-width: 450px;\n    border-bottom: 1px solid ${props => props.ThemeColor};\n    margin-bottom: 20px;\n  }\n\n  label:focus-within {\n    border-bottom: 1px solid rgb(254, 105, 5);\n    color: rgb(254, 105, 5);\n  }\n\n  input {\n    background-color: inherit;\n    outline: none;\n    border: none;\n    padding: 5px;\n  }\n\n  @media (max-width: 1100px) {\n    padding: 20px;\n  }\n`;\n_c2 = FormDiv;\nexport default ContactForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"ContactForm\");\n$RefreshReg$(_c2, \"FormDiv\");","map":{"version":3,"names":["React","useState","useContext","PrimaryButton","styled","SomeContext","jsxDEV","_jsxDEV","Fragment","_Fragment","ContactForm","_s","_useContext","name","setName","email","setEmail","phone","setPhone","showError","setShowError","showSuccess","setShowSuccess","theme","handleSubmit","setTimeout","children","FormDiv","ThemeColor","onSubmit","onChange","event","target","value","required","fileName","_jsxFileName","lineNumber","columnNumber","type","className","_c","form","props","_c2","$RefreshReg$"],"sources":["/Users/klarabryntesson/Documents/Fullstack/React/Typescript-Klara-portfolio/src/ContactForm.tsx"],"sourcesContent":["import React from 'react';\n// import { Formik } from \"formik\";\nimport { useState, useContext } from 'react';\nimport PrimaryButton from './PrimaryButton';\nimport styled from 'styled-components';\nimport { SomeContext } from './SomeContext';\n\ninterface MyComponentProps {\n  ThemeColor: string;\n}\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [showError, setShowError] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const { theme } = useContext(SomeContext) ?? {};\n\n  function handleSubmit() {\n    if (name === '' || email === '' || phone === '') {\n      setShowError(true);\n      setTimeout(() => {\n        setShowError(false);\n      }, 3000);\n    } else {\n      setShowSuccess(true);\n      setTimeout(() => {\n        setShowSuccess(false);\n      }, 3000);\n    }\n  }\n\n  return (\n    <>\n      <FormDiv\n        ThemeColor={theme === 'light' ? 'rgb(42, 42, 42)' : 'antiquewhite'}\n        onSubmit={handleSubmit}\n      >\n        <label>\n          Name\n          <input\n            onChange={(event) => setName(event.target.value)}\n            value={name}\n            required\n          />\n        </label>\n        <label>\n          Email\n          <input\n            type='email'\n            onChange={(event) => setEmail(event.target.value)}\n            value={email}\n            required\n          />\n        </label>\n        <label>\n          Phone\n          <input\n            type='tel'\n            onChange={(event) => setPhone(event.target.value)}\n            value={phone}\n            required\n          />\n        </label>\n        <PrimaryButton type='submit'>Send Inquiry</PrimaryButton>\n        {showError && (\n          <p className='Contact-message'>All fields must be filled in!</p>\n        )}\n        {showSuccess && (\n          <p className='Contact-message'>Thank you for your inquiry!</p>\n        )}\n      </FormDiv>\n    </>\n  );\n}\n\nconst FormDiv = styled.form<MyComponentProps>`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  padding: 25px;\n\n  label {\n    display: flex;\n    flex-direction: column;\n    width: 70%;\n    min-width: 300px;\n    max-width: 450px;\n    border-bottom: 1px solid ${(props) => props.ThemeColor};\n    margin-bottom: 20px;\n  }\n\n  label:focus-within {\n    border-bottom: 1px solid rgb(254, 105, 5);\n    color: rgb(254, 105, 5);\n  }\n\n  input {\n    background-color: inherit;\n    outline: none;\n    border: none;\n    padding: 5px;\n  }\n\n  @media (max-width: 1100px) {\n    padding: 20px;\n  }\n`;\n\nexport default ContactForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}