{"ast":null,"code":"var _jsxFileName = \"/Users/klarabryntesson/Documents/Fullstack/React/Typescript-Klara-portfolio/src/BlogForm.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport moment from 'moment';\nimport { useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport PrimaryButton from './PrimaryButton';\nimport { SomeContext } from './SomeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BlogForm(props) {\n  _s();\n  var _useContext, _useContext2;\n  const {\n    loggedIn\n  } = (_useContext = useContext(SomeContext)) !== null && _useContext !== void 0 ? _useContext : {};\n  const {\n    theme\n  } = (_useContext2 = useContext(SomeContext)) !== null && _useContext2 !== void 0 ? _useContext2 : {};\n  const [posts, setPosts] = useState(props.blogPosts);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n\n  // function handleSubmit(event: React.FormEvent<HTMLFormElement>)\n  function handleSubmit() {\n    var _event;\n    (_event = event) === null || _event === void 0 ? void 0 : _event.preventDefault();\n    if (loggedIn) {\n      const newPost = {\n        title: title,\n        date: moment(thisDate),\n        content: content\n      };\n      // setPosts((prevPosts) => {\n      //   const updatedPosts = [newPost, ...prevPosts];\n      //   localStorage.setItem('posts', JSON.stringify(updatedPosts));\n      //   return updatedPosts;\n      // });\n      // setTitle('');\n      // setContent('');\n      setPosts([newPost, ...posts]);\n      localStorage.setItem('posts', JSON.stringify([newPost, ...posts]));\n      setTitle('');\n      setContent('');\n    }\n  }\n  const thisDate = moment().format('YYYY-MM-DD');\n  return /*#__PURE__*/_jsxDEV(Form, {\n    ThemeColor: theme === 'light' ? 'rgb(42, 42, 42)' : 'antiquewhite',\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Title\", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: event => setTitle(event.target.value),\n        value: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Content\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: 4,\n        onChange: event => setContent(event.target.value),\n        value: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n      type: \"submit\",\n      children: \"Publish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(BlogForm, \"mxXws2lkk553mZwX1O23D9Hqbho=\");\n_c = BlogForm;\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 350px;\n\n  label {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    border-bottom: 1px solid ${props => props.ThemeColor};\n    margin-bottom: 20px;\n  }\n\n  input {\n    width: 250px;\n    background-color: inherit;\n    outline: none;\n    border: none;\n    padding: 5px;\n  }\n\n  textarea {\n    width: 250px;\n    background-color: inherit;\n    outline: none;\n    border: none;\n    padding: 5px;\n  }\n`;\n_c2 = Form;\nexport default BlogForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"BlogForm\");\n$RefreshReg$(_c2, \"Form\");","map":{"version":3,"names":["React","moment","useState","useContext","styled","PrimaryButton","SomeContext","jsxDEV","_jsxDEV","BlogForm","props","_s","_useContext","_useContext2","loggedIn","theme","posts","setPosts","blogPosts","title","setTitle","content","setContent","handleSubmit","_event","event","preventDefault","newPost","date","thisDate","localStorage","setItem","JSON","stringify","format","Form","ThemeColor","onSubmit","children","onChange","target","value","fileName","_jsxFileName","lineNumber","columnNumber","rows","type","_c","form","_c2","$RefreshReg$"],"sources":["/Users/klarabryntesson/Documents/Fullstack/React/Typescript-Klara-portfolio/src/BlogForm.tsx"],"sourcesContent":["import React from 'react';\nimport moment, { Moment } from 'moment';\nimport { useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport PrimaryButton from './PrimaryButton';\nimport { SomeContext } from './SomeContext';\n\ninterface Post {\n  title: string;\n  date: Moment;\n  content: string;\n}\n\ninterface MyComponentProps {\n  ThemeColor: string;\n}\n\ntype BlogFormProps = {\n  blogPosts: Post[];\n};\n\nfunction BlogForm(props: BlogFormProps) {\n  const { loggedIn } = useContext(SomeContext) ?? {};\n  const { theme } = useContext(SomeContext) ?? {};\n  const [posts, setPosts] = useState<Post[]>(props.blogPosts);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n\n  // function handleSubmit(event: React.FormEvent<HTMLFormElement>)\n  function handleSubmit() {\n    event?.preventDefault();\n    if (loggedIn) {\n      const newPost = {\n        title: title,\n        date: moment(thisDate),\n        content: content,\n      };\n      // setPosts((prevPosts) => {\n      //   const updatedPosts = [newPost, ...prevPosts];\n      //   localStorage.setItem('posts', JSON.stringify(updatedPosts));\n      //   return updatedPosts;\n      // });\n      // setTitle('');\n      // setContent('');\n      setPosts([newPost, ...posts]);\n      localStorage.setItem('posts', JSON.stringify([newPost, ...posts]));\n      setTitle('');\n      setContent('');\n    }\n  }\n\n  const thisDate = moment().format('YYYY-MM-DD');\n\n  return (\n    <Form\n      ThemeColor={theme === 'light' ? 'rgb(42, 42, 42)' : 'antiquewhite'}\n      onSubmit={handleSubmit}\n    >\n      <label>\n        Title\n        <input\n          onChange={(event) => setTitle(event.target.value)}\n          value={title}\n        />\n      </label>\n      <label>\n        Content\n        <textarea\n          rows={4}\n          onChange={(event) => setContent(event.target.value)}\n          value={content}\n        />\n      </label>\n      <PrimaryButton type='submit'>Publish</PrimaryButton>\n    </Form>\n  );\n}\n\nconst Form = styled.form<MyComponentProps>`\n  display: flex;\n  flex-direction: column;\n  width: 350px;\n\n  label {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    border-bottom: 1px solid ${(props) => props.ThemeColor};\n    margin-bottom: 20px;\n  }\n\n  input {\n    width: 250px;\n    background-color: inherit;\n    outline: none;\n    border: none;\n    padding: 5px;\n  }\n\n  textarea {\n    width: 250px;\n    background-color: inherit;\n    outline: none;\n    border: none;\n    padding: 5px;\n  }\n`;\n\nexport default BlogForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}