{"ast":null,"code":"var _jsxFileName = \"/Users/klarabryntesson/Documents/Fullstack/React/Typescript-Klara-portfolio/src/WorkList.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { SomeContext } from './SomeContext';\nimport { useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WorkList(props) {\n  _s();\n  var _useContext;\n  const {\n    theme\n  } = (_useContext = useContext(SomeContext)) !== null && _useContext !== void 0 ? _useContext : {};\n  return /*#__PURE__*/_jsxDEV(Cards, {\n    className: \"WorkList\",\n    children: props.projects.map(project => /*#__PURE__*/_jsxDEV(Link, {\n      className: \"WorkList-card\",\n      to: project.id,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        ThemeColor: theme === 'light' ? 'rgba(211, 206, 194, 0.7)' : 'rgb(254, 105, 5)',\n        image: project.image,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: project.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"WorkList-container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, project.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(WorkList, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n_c = WorkList;\nWorkList.propTypes = {\n  projects: PropTypes.array\n};\nconst Cards = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n`;\n_c2 = Cards;\nconst Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: ${props => props.ThemeColor};\n  width: 300px;\n  aspect-ratio: 1 / 1;\n\n  .WorkList-container {\n    visibility: hidden;\n  }\n\n  h3 {\n    visibility: visible;\n  }\n\n  &:hover {\n    .WorkList-container {\n      visibility: visible;\n      position: absolute;\n      width: 300px;\n      aspect-ratio: 1;\n      background-image: url(${props => props.image});\n      opacity: 0.75;\n      background-repeat: no-repeat;\n      background-size: cover;\n      animation: backGround 0.5s linear;\n    }\n\n    .WorkList-container::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      background-color: #54524f52;\n    }\n\n    h3 {\n      visibility: hidden;\n    }\n  }\n\n  @keyframes backGround {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 0.75;\n    }\n  }\n\n  div {\n    text-align: center;\n  }\n`;\n_c3 = Card;\nexport default WorkList;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"WorkList\");\n$RefreshReg$(_c2, \"Cards\");\n$RefreshReg$(_c3, \"Card\");","map":{"version":3,"names":["React","Link","PropTypes","styled","SomeContext","useContext","jsxDEV","_jsxDEV","WorkList","props","_s","_useContext","theme","Cards","className","children","projects","map","project","to","id","Card","ThemeColor","image","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","array","div","_c2","_c3","$RefreshReg$"],"sources":["/Users/klarabryntesson/Documents/Fullstack/React/Typescript-Klara-portfolio/src/WorkList.tsx"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Project } from './WorkView';\nimport { SomeContext } from './SomeContext';\nimport { useContext } from 'react';\n\ninterface WorkListProps {\n  projects: Project[];\n}\n\ninterface CardProps {\n  image: string;\n  ThemeColor: string;\n}\n\nfunction WorkList(props: WorkListProps) {\n  const { theme } = useContext(SomeContext) ?? {};\n\n  return (\n    <Cards className='WorkList'>\n      {props.projects.map((project) => (\n        <Link className='WorkList-card' to={project.id} key={project.id}>\n          <Card\n            ThemeColor={\n              theme === 'light'\n                ? 'rgba(211, 206, 194, 0.7)'\n                : 'rgb(254, 105, 5)'\n            }\n            image={project.image}\n          >\n            <h3>{project.name}</h3>\n            <div className='WorkList-container'>\n              {/* <div>\n                {project.languages.map((language) => (\n                  <span key={language}> {language} / </span>\n                ))}\n              </div> */}\n            </div>\n          </Card>\n        </Link>\n      ))}\n    </Cards>\n  );\n}\n\nWorkList.propTypes = {\n  projects: PropTypes.array,\n};\n\nconst Cards = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n`;\n\nconst Card = styled.div<CardProps>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: ${(props) => props.ThemeColor};\n  width: 300px;\n  aspect-ratio: 1 / 1;\n\n  .WorkList-container {\n    visibility: hidden;\n  }\n\n  h3 {\n    visibility: visible;\n  }\n\n  &:hover {\n    .WorkList-container {\n      visibility: visible;\n      position: absolute;\n      width: 300px;\n      aspect-ratio: 1;\n      background-image: url(${(props) => props.image});\n      opacity: 0.75;\n      background-repeat: no-repeat;\n      background-size: cover;\n      animation: backGround 0.5s linear;\n    }\n\n    .WorkList-container::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      background-color: #54524f52;\n    }\n\n    h3 {\n      visibility: hidden;\n    }\n  }\n\n  @keyframes backGround {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 0.75;\n    }\n  }\n\n  div {\n    text-align: center;\n  }\n`;\n\nexport default WorkList;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,MAAM,MAAM,mBAAmB;AAEtC,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAWnC,SAASC,QAAQA,CAACC,KAAoB,EAAE;EAAAC,EAAA;EAAA,IAAAC,WAAA;EACtC,MAAM;IAAEC;EAAM,CAAC,IAAAD,WAAA,GAAGN,UAAU,CAACD,WAAW,CAAC,cAAAO,WAAA,cAAAA,WAAA,GAAI,CAAC,CAAC;EAE/C,oBACEJ,OAAA,CAACM,KAAK;IAACC,SAAS,EAAC,UAAU;IAAAC,QAAA,EACxBN,KAAK,CAACO,QAAQ,CAACC,GAAG,CAAEC,OAAO,iBAC1BX,OAAA,CAACN,IAAI;MAACa,SAAS,EAAC,eAAe;MAACK,EAAE,EAAED,OAAO,CAACE,EAAG;MAAAL,QAAA,eAC7CR,OAAA,CAACc,IAAI;QACHC,UAAU,EACRV,KAAK,KAAK,OAAO,GACb,0BAA0B,GAC1B,kBACL;QACDW,KAAK,EAAEL,OAAO,CAACK,KAAM;QAAAR,QAAA,gBAErBR,OAAA;UAAAQ,QAAA,EAAKG,OAAO,CAACM;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eACvBrB,OAAA;UAAKO,SAAS,EAAC;QAAoB;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAM7B;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACD,GAjB4CV,OAAO,CAACE,EAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAmBhE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACI;AAEZ;AAAClB,EAAA,CA5BQF,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AA8BjBA,QAAQ,CAACsB,SAAS,GAAG;EACnBd,QAAQ,EAAEd,SAAS,CAAC6B;AACtB,CAAC;AAED,MAAMlB,KAAK,GAAGV,MAAM,CAAC6B,GAAI;AACzB;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIpB,KAAK;AAMX,MAAMQ,IAAI,GAAGlB,MAAM,CAAC6B,GAAe;AACnC;AACA;AACA;AACA;AACA,sBAAuBvB,KAAK,IAAKA,KAAK,CAACa,UAAW;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA+Bb,KAAK,IAAKA,KAAK,CAACc,KAAM;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACW,GAAA,GAzDIb,IAAI;AA2DV,eAAeb,QAAQ;AAAC,IAAAqB,EAAA,EAAAI,GAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAF,GAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}