{"ast":null,"code":"var _jsxFileName = \"/Users/klarabryntesson/Documents/Fullstack/fullstack/Typescript-frontend/src/ContactForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport PrimaryButton from './PrimaryButton';\nimport styled from 'styled-components';\nimport { SomeContext } from './SomeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ContactForm() {\n  _s();\n  var _useContext;\n  const [name, setName] = useState(''),\n    [email, setEmail] = useState(''),\n    [phone, setPhone] = useState(''),\n    [message, setMessage] = useState(''),\n    [showError, setShowError] = useState(false),\n    [showSuccess, setShowSuccess] = useState(false),\n    theme = (_useContext = useContext(SomeContext)) === null || _useContext === void 0 ? void 0 : _useContext.theme;\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(name);\n    console.log(email);\n    console.log(phone);\n    if (name === '' || email === '' || phone === '' || message === '') {\n      setShowError(true);\n      setTimeout(() => {\n        setShowError(false);\n      }, 3000);\n    } else {\n      fetch('http://localhost:8080/contact', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          phone,\n          message\n        })\n      }).then(response => {\n        console.log(response);\n      });\n      setShowSuccess(true);\n      setTimeout(() => {\n        setShowSuccess(false);\n      }, 3000);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormDiv, {\n      action: \"http://localhost:8080/contact\",\n      method: \"POST\",\n      ThemeColor: theme === 'light' ? 'rgb(42, 42, 42)' : 'antiquewhite',\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => setName(event.target.value),\n          name: \"name\",\n          value: name,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          onChange: event => setEmail(event.target.value),\n          name: \"email\",\n          value: email,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Phone\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          onChange: event => setPhone(event.target.value),\n          name: \"phone\",\n          value: phone,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Message\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => setMessage(event.target.value),\n          name: \"message\",\n          value: message,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n        type: \"submit\",\n        children: \"Send Inquiry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), showError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Contact-message\",\n        children: \"All fields must be filled in!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), showSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Contact-message\",\n        children: \"Thank you for your inquiry!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(ContactForm, \"kQvDL7r5V0BN6LMJe8HA3H/CuuU=\");\n_c = ContactForm;\nconst FormDiv = styled.form`\n  width: 100%;\n  position: relative;\n  padding: 25px;\n  margin-top: 10px;\n\n  label {\n    width: 80%;\n    min-width: 250px;\n    max-width: 450px;\n    border-bottom: 1px solid ${props => props.ThemeColor};\n  }\n\n  label:nth-child(2) {\n    height: 70px;\n  }\n\n  @media (max-width: 1100px) {\n    padding: 0;\n  }\n`;\n_c2 = FormDiv;\nexport default ContactForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"ContactForm\");\n$RefreshReg$(_c2, \"FormDiv\");","map":{"version":3,"names":["React","useState","useContext","PrimaryButton","styled","SomeContext","jsxDEV","_jsxDEV","Fragment","_Fragment","ContactForm","_s","_useContext","name","setName","email","setEmail","phone","setPhone","message","setMessage","showError","setShowError","showSuccess","setShowSuccess","theme","handleSubmit","event","preventDefault","console","log","setTimeout","fetch","method","headers","body","JSON","stringify","then","response","children","FormDiv","action","ThemeColor","onSubmit","onChange","target","value","required","fileName","_jsxFileName","lineNumber","columnNumber","type","className","_c","form","props","_c2","$RefreshReg$"],"sources":["/Users/klarabryntesson/Documents/Fullstack/fullstack/Typescript-frontend/src/ContactForm.tsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport PrimaryButton from './PrimaryButton';\nimport styled from 'styled-components';\nimport { SomeContext } from './SomeContext';\nimport { MyComponentProps } from '../../backend/interfaces';\n\nfunction ContactForm() {\n  const [name, setName] = useState(''),\n    [email, setEmail] = useState(''),\n    [phone, setPhone] = useState(''),\n    [message, setMessage] = useState(''),\n    [showError, setShowError] = useState(false),\n    [showSuccess, setShowSuccess] = useState(false),\n    theme = useContext(SomeContext)?.theme;\n\n  function handleSubmit(event: React.FormEvent) {\n    event.preventDefault();\n    console.log(name);\n    console.log(email);\n    console.log(phone);\n    if (name === '' || email === '' || phone === '' || message === '') {\n      setShowError(true);\n      setTimeout(() => {\n        setShowError(false);\n      }, 3000);\n    } else {\n      fetch('http://localhost:8080/contact', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          phone,\n          message,\n        }),\n      }).then((response) => {\n        console.log(response);\n      });\n      setShowSuccess(true);\n      setTimeout(() => {\n        setShowSuccess(false);\n      }, 3000);\n    }\n  }\n\n  return (\n    <>\n      <FormDiv\n        action='http://localhost:8080/contact'\n        method='POST'\n        ThemeColor={theme === 'light' ? 'rgb(42, 42, 42)' : 'antiquewhite'}\n        onSubmit={handleSubmit}\n      >\n        <label>\n          Name\n          <input\n            onChange={(event) => setName(event.target.value)}\n            name='name'\n            value={name}\n            required\n          />\n        </label>\n        <label>\n          Email\n          <input\n            type='email'\n            onChange={(event) => setEmail(event.target.value)}\n            name='email'\n            value={email}\n            required\n          />\n        </label>\n        <label>\n          Phone\n          <input\n            type='tel'\n            onChange={(event) => setPhone(event.target.value)}\n            name='phone'\n            value={phone}\n            required\n          />\n        </label>\n        <label>\n          Message\n          <input\n            onChange={(event) => setMessage(event.target.value)}\n            name='message'\n            value={message}\n            required\n          />\n        </label>\n        <PrimaryButton type='submit'>Send Inquiry</PrimaryButton>\n        {showError && (\n          <p className='Contact-message'>All fields must be filled in!</p>\n        )}\n        {showSuccess && (\n          <p className='Contact-message'>Thank you for your inquiry!</p>\n        )}\n      </FormDiv>\n    </>\n  );\n}\n\nconst FormDiv = styled.form<MyComponentProps>`\n  width: 100%;\n  position: relative;\n  padding: 25px;\n  margin-top: 10px;\n\n  label {\n    width: 80%;\n    min-width: 250px;\n    max-width: 450px;\n    border-bottom: 1px solid ${(props) => props.ThemeColor};\n  }\n\n  label:nth-child(2) {\n    height: 70px;\n  }\n\n  @media (max-width: 1100px) {\n    padding: 0;\n  }\n`;\n\nexport default ContactForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}