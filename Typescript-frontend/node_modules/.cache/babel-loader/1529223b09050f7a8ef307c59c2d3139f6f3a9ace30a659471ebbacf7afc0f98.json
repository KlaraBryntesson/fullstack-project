{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from 'react';\n// export interface Result {\n//   about: {\n//     details: {\n//       name: string;\n//       age: Moment;\n//       city: string;\n//       email: string;\n//       github: string;\n//       linkedin: string;\n//       image: string[];\n//     };\n//     misc: {\n//       bio: string;\n//       introdescription: string;\n//       description: string[];\n//       important: string;\n//       skills: string[];\n//     };\n//   };\n//   work: Work[];\n//   blog: Blog[];\n// }\n\n// export function useFetch(): Result | null {\n//   const [result, setResult] = useState<Result | null>(null);\n//   useEffect(() => {\n//     fetch('/klara.json')\n//       .then((response) => response.json())\n//       .then((result) => {\n//         setResult(result);\n//       });\n//   }, []);\n\n//   return result;\n// }\n\nexport function useFetchWork() {\n  _s();\n  const [work, setWork] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8080/work').then(response => response.json()).then(result => {\n      setWork(result);\n    });\n  }, []);\n  return work;\n}\n\n// export function useFetchBlog(): Blog[] | [] {\n//   const [blog, setBlog] = useState<Blog[] | []>([]);\n//   useEffect(() => {\n//     fetch('http://localhost:8080/blog')\n//       .then((response) => response.json())\n//       .then((result) => {\n//         setBlog(result);\n//       });\n//   }, []);\n\n//   return blog;\n// }\n_s(useFetchWork, \"J4X/1MEa7ODhDxcguh8Nl+ljw5Y=\");\nexport function useFetchAbout() {\n  _s2();\n  const [about, setAbout] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:8080/about').then(response => response.json()).then(result => {\n      setAbout(result);\n    });\n  }, []);\n  return about;\n}\n_s2(useFetchAbout, \"ZQewCrXo0ZaqbbuJPEFRGd1ogYs=\");","map":{"version":3,"names":["useEffect","useState","useFetchWork","_s","work","setWork","fetch","then","response","json","result","useFetchAbout","_s2","about","setAbout"],"sources":["/Users/klarabryntesson/Documents/Fullstack/fullstack/Typescript-frontend/src/useFetch.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Work, About } from '../../backend/interfaces';\n\n// export interface Result {\n//   about: {\n//     details: {\n//       name: string;\n//       age: Moment;\n//       city: string;\n//       email: string;\n//       github: string;\n//       linkedin: string;\n//       image: string[];\n//     };\n//     misc: {\n//       bio: string;\n//       introdescription: string;\n//       description: string[];\n//       important: string;\n//       skills: string[];\n//     };\n//   };\n//   work: Work[];\n//   blog: Blog[];\n// }\n\n// export function useFetch(): Result | null {\n//   const [result, setResult] = useState<Result | null>(null);\n//   useEffect(() => {\n//     fetch('/klara.json')\n//       .then((response) => response.json())\n//       .then((result) => {\n//         setResult(result);\n//       });\n//   }, []);\n\n//   return result;\n// }\n\nexport function useFetchWork(): Work[] | [] {\n  const [work, setWork] = useState<Work[] | []>([]);\n  useEffect(() => {\n    fetch('http://localhost:8080/work')\n      .then((response) => response.json())\n      .then((result) => {\n        setWork(result);\n      });\n  }, []);\n\n  return work;\n}\n\n// export function useFetchBlog(): Blog[] | [] {\n//   const [blog, setBlog] = useState<Blog[] | []>([]);\n//   useEffect(() => {\n//     fetch('http://localhost:8080/blog')\n//       .then((response) => response.json())\n//       .then((result) => {\n//         setBlog(result);\n//       });\n//   }, []);\n\n//   return blog;\n// }\n\nexport function useFetchAbout(): About | null {\n  const [about, setAbout] = useState<About | null>(null);\n  useEffect(() => {\n    fetch('http://localhost:8080/about')\n      .then((response) => response.json())\n      .then((result) => {\n        setAbout(result);\n      });\n  }, []);\n\n  return about;\n}\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAG3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,OAAO,SAASC,YAAYA,CAAA,EAAgB;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAc,EAAE,CAAC;EACjDD,SAAS,CAAC,MAAM;IACdM,KAAK,CAAC,4BAA4B,CAAC,CAChCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,MAAM,IAAK;MAChBL,OAAO,CAACK,MAAM,CAAC;IACjB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,OAAON,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAAD,EAAA,CAxBgBD,YAAY;AA0B5B,OAAO,SAASS,aAAaA,CAAA,EAAiB;EAAAC,GAAA;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAe,IAAI,CAAC;EACtDD,SAAS,CAAC,MAAM;IACdM,KAAK,CAAC,6BAA6B,CAAC,CACjCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,MAAM,IAAK;MAChBI,QAAQ,CAACJ,MAAM,CAAC;IAClB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOG,KAAK;AACd;AAACD,GAAA,CAXeD,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}